/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.Applicant;
import Model.ApplicantCatalog;
import Model.Business;
import Model.Insurance;
import Model.PlanDetail;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author nishn 
 */
public class ViewUpdateInsurancePlans extends javax.swing.JPanel {

    /**
     * Creates new form ViewUpdateInsurancePlans
     */
    
    private Business business;
    
    DefaultTableModel viewPlanTableModel;
    Insurance selectedInsurance = new Insurance();
    
    public ViewUpdateInsurancePlans() {
        initComponents();
    }

    ViewUpdateInsurancePlans(Business business) {
        initComponents();
        this.business = business;
        this.viewPlanTableModel = (DefaultTableModel) InsurancePlanTable.getModel();
        
        displayPlans();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
        private void initComponents() {

                UpdatePlanBtn = new javax.swing.JButton();
                jScrollPane2 = new javax.swing.JScrollPane();
                InsurancePlanTable = new javax.swing.JTable();
                jLabel4 = new javax.swing.JLabel();
                fieldPlanName = new javax.swing.JTextField();
                delPlanBtn = new javax.swing.JButton();
                fieldPlanID = new javax.swing.JTextField();
                jLabel5 = new javax.swing.JLabel();
                jLabel6 = new javax.swing.JLabel();
                jLabel7 = new javax.swing.JLabel();
                fieldPlanCostpm = new javax.swing.JTextField();
                fieldPlanCostpa = new javax.swing.JTextField();
                viewBtn1 = new javax.swing.JButton();

                UpdatePlanBtn.setText("Update Insurance Plan");
                UpdatePlanBtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                UpdatePlanBtnActionPerformed(evt);
                        }
                });

                InsurancePlanTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                                "Insurance Plan ID", "Insurance Plan Name ", "Insurance Plan Cost per month", "Insurance Plan Cost per Annum"
                        }
                ) {
                        Class[] types = new Class [] {
                                java.lang.Object.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class
                        };

                        public Class getColumnClass(int columnIndex) {
                                return types [columnIndex];
                        }
                });
                jScrollPane2.setViewportView(InsurancePlanTable);

                jLabel4.setText("Insurance Plan ID");

                fieldPlanName.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                fieldPlanNameActionPerformed(evt);
                        }
                });

                delPlanBtn.setText("DELETE INSURANCE PLAN");
                delPlanBtn.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                delPlanBtnActionPerformed(evt);
                        }
                });

                fieldPlanID.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                fieldPlanIDActionPerformed(evt);
                        }
                });

                jLabel5.setText("Insurance Plan Name");

                jLabel6.setText("Insurance Plan Cost per month");

                jLabel7.setText("nsurance Plan Cost per annum");

                fieldPlanCostpm.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                fieldPlanCostpmActionPerformed(evt);
                        }
                });

                fieldPlanCostpa.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                fieldPlanCostpaActionPerformed(evt);
                        }
                });

                viewBtn1.setText("VIEW INSURANCE PLAN");
                viewBtn1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                                viewBtn1ActionPerformed(evt);
                        }
                });

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
                this.setLayout(layout);
                layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 794, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel4)
                                                        .addComponent(jLabel5)
                                                        .addComponent(jLabel6)
                                                        .addComponent(jLabel7))
                                                .addGap(59, 59, 59)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(fieldPlanName, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(fieldPlanID, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(fieldPlanCostpm, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(fieldPlanCostpa, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(76, 76, 76)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(viewBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                                                        .addComponent(UpdatePlanBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(121, 121, 121)
                                .addComponent(delPlanBtn)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(173, 173, 173)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(delPlanBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(78, 78, 78))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(30, 30, 30)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jLabel4)
                                                                        .addComponent(fieldPlanID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(fieldPlanName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addComponent(jLabel5)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(49, 49, 49)
                                                                .addComponent(viewBtn1)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(jLabel6)
                                                                        .addComponent(fieldPlanCostpm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(13, 13, 13)
                                                                .addComponent(UpdatePlanBtn)))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel7)
                                                        .addComponent(fieldPlanCostpa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 114, Short.MAX_VALUE)))
                                .addContainerGap())
                );
        }// </editor-fold>//GEN-END:initComponents

    
    public void displayPlans(){
        
        PlanDetail planCatalog = this.business.getInsuranceDetail();
        
        if(planCatalog.getPlanDetails().size() > 0){
            
            viewPlanTableModel.setRowCount(0);
            for(Insurance in : planCatalog.getPlanDetails()){
                
                Object row[] = new Object[4];
                row[0] = in;
                row[1] = in.getPlan_name();
                row[2] = in.getPlan_cost_per_month();
                row[3] = in.getPlan_cost_per_annum();
                
                viewPlanTableModel.addRow(row);       
            }
        }
        else{
            System.out.println("Empty List");
        }   
    }
    
    
    private void UpdatePlanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatePlanBtnActionPerformed
        // TODO add your handling code here:

        if(!fieldPlanID.getText().isEmpty()){
            this.selectedInsurance.setPlan_name(fieldPlanName.getText());
            this.selectedInsurance.setPlan_cost_per_month(Double.valueOf(fieldPlanCostpm.getText()));
            
            fieldPlanCostpa.setText(String.valueOf(this.selectedInsurance.calulatePlanCostPerAnnum(Double.valueOf(fieldPlanCostpm.getText()))));
            this.selectedInsurance.setPlan_cost_per_annum(Double.valueOf(fieldPlanCostpa.getText()));
        }
        else{
            JOptionPane.showMessageDialog(null, "No selection made!");
        }

        displayPlans();
    }//GEN-LAST:event_UpdatePlanBtnActionPerformed

    private void fieldPlanNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPlanNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPlanNameActionPerformed

    private void delPlanBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delPlanBtnActionPerformed
        // TODO add your handling code here:

        PlanDetail planCatalog = this.business.getInsuranceDetail();
        int selectedRow = InsurancePlanTable.getSelectedRow();
        
        if(selectedRow >= 0){
            
            this.selectedInsurance = (Insurance) InsurancePlanTable.getValueAt(selectedRow, 0);
            
            planCatalog.removeInsurancePlan(this.selectedInsurance.getPlan_id());
            
        }
        
        displayPlans();
        
    }//GEN-LAST:event_delPlanBtnActionPerformed

    private void fieldPlanIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPlanIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPlanIDActionPerformed

    private void fieldPlanCostpmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPlanCostpmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPlanCostpmActionPerformed

    private void fieldPlanCostpaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPlanCostpaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPlanCostpaActionPerformed

    private void viewBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtn1ActionPerformed
        // TODO add your handling code here:

        int selectedRow = InsurancePlanTable.getSelectedRow();

        if(selectedRow >= 0){
            this.selectedInsurance = (Insurance) InsurancePlanTable.getValueAt(selectedRow, 0);

            fieldPlanID.setText(String.valueOf(this.selectedInsurance.getPlan_id()));
            fieldPlanName.setText(String.valueOf(this.selectedInsurance.getPlan_name()));
            fieldPlanCostpm.setText(String.valueOf(this.selectedInsurance.getPlan_cost_per_month()));
            fieldPlanCostpa.setText(String.valueOf(this.selectedInsurance.getPlan_cost_per_annum()));
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!");
        }
    }//GEN-LAST:event_viewBtn1ActionPerformed


        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JTable InsurancePlanTable;
        private javax.swing.JButton UpdatePlanBtn;
        private javax.swing.JButton delPlanBtn;
        private javax.swing.JTextField fieldPlanCostpa;
        private javax.swing.JTextField fieldPlanCostpm;
        private javax.swing.JTextField fieldPlanID;
        private javax.swing.JTextField fieldPlanName;
        private javax.swing.JLabel jLabel4;
        private javax.swing.JLabel jLabel5;
        private javax.swing.JLabel jLabel6;
        private javax.swing.JLabel jLabel7;
        private javax.swing.JScrollPane jScrollPane2;
        private javax.swing.JButton viewBtn1;
        // End of variables declaration//GEN-END:variables
}
