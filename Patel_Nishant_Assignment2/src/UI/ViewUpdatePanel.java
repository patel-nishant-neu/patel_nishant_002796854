/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import Model.Applicant;
import Model.ApplicantCatalog;
import Model.Business;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shalomdaniel
 */
public class ViewUpdatePanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewUpdatePanel
     */
    private Business business;
    
    DefaultTableModel viewApptablemodel;
    DefaultTableModel viewPettablemodel;
    Applicant selectedApplicant;
    
    public ViewUpdatePanel() {
        initComponents();
    }

    ViewUpdatePanel(Business business) {
        initComponents();
        this.business = business;
        this.viewApptablemodel = (DefaultTableModel) appTable.getModel();
        this.viewPettablemodel = (DefaultTableModel) petTable.getModel();
        
        displayApplicants();
        displayPetDetails();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        appTable = new javax.swing.JTable();
        viewBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        fieldPetAge = new javax.swing.JTextField();
        UpdatePetAgeBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        petTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        fieldAppID = new javax.swing.JTextField();
        delBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        fieldVaccineName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        fieldNoOfVax = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        appTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Application ID", "Owner First Name", "Owner Last Name", "Insurance Plan"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(appTable);

        viewBtn.setText("VIEW DETAILS");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Pet Age");

        fieldPetAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldPetAgeActionPerformed(evt);
            }
        });

        UpdatePetAgeBtn.setText("UPDATE");
        UpdatePetAgeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatePetAgeBtnActionPerformed(evt);
            }
        });

        petTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Application ID", "Pet Name ", "Pet Type", "Pet Breed", "Pet Gender", "Pet Age", "Pet Vaccine Name", "Vaccine Coure Status", "Application Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(petTable);

        jLabel4.setText("Applicant ID");

        fieldAppID.setEnabled(false);
        fieldAppID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAppIDActionPerformed(evt);
            }
        });

        delBtn.setText("DELETE APPLICANT RECORD");
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Application Date");

        fieldVaccineName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldVaccineNameActionPerformed(evt);
            }
        });

        jLabel6.setText("Vaccine Name");

        jLabel11.setText("Pet Vaccine Course Status");

        fieldNoOfVax.setEnabled(false);
        fieldNoOfVax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldNoOfVaxActionPerformed(evt);
            }
        });

        jLabel7.setText("Number of Vaccines");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(delBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(UpdatePetAgeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fieldVaccineName, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(fieldPetAge, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(fieldAppID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(34, 34, 34)
                                        .addComponent(fieldNoOfVax, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)))
                                .addGap(14, 14, 14))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(294, 294, 294))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(fieldAppID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldPetAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(fieldVaccineName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fieldNoOfVax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(69, 69, 69)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdatePetAgeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void displayApplicants(){
        ApplicantCatalog appCatalog = this.business.getApplicantCatalog();
        
        if(appCatalog.getApplicants().size() > 0){
            
            viewApptablemodel.setRowCount(0);
            for(Applicant a : appCatalog.getApplicants()){
                
                Object row[] = new Object[5];
                row[0] = a;
                row[1] = a.getOwner_firstname();
                row[2] = a.getOwner_lastname();
                row[3] = a.getInsurancePlan_assignment().getPlan_name();
                
                
                viewApptablemodel.addRow(row);
                
            }
        }
        else{
            System.out.println("Empty List");
        }   
    }
    
    public void displayPetDetails(){
        ApplicantCatalog appCatalog = this.business.getApplicantCatalog();
        
        if(appCatalog.getApplicants().size() > 0){
            
            viewPettablemodel.setRowCount(0);
            for(Applicant a : appCatalog.getApplicants()){
                
                Object row[] = new Object[9];
                row[0] = a;
                row[1] = a.getPet().getPet_name();
                row[2] = a.getPet().getPet_type();
                row[3] = a.getPet().getBreed();
                row[4] = a.getPet().getPet_gender();
                row[5] = a.getPet().getPet_age();
                row[6] = a.getPetVaccine().getVaccine_name();
                row[7] = a.getPetVaccine().getIsCourseCompleted(); 
                row[8] = a.getApplication_date();
                
                viewPettablemodel.addRow(row);
                
            }
        }
        else{
            System.out.println("Empty List");
        }   
    }
    
    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:

        int selectedRow_pet = petTable.getSelectedRow();
        
        if(selectedRow_pet >= 0){
            this.selectedApplicant = (Applicant) petTable.getValueAt(selectedRow_pet, 0);

            fieldAppID.setText(String.valueOf(this.selectedApplicant.getApp_id()));
            fieldAppID.setEditable(false);
            
            fieldPetAge.setText(String.valueOf(this.selectedApplicant.getPet().getPet_age()));
            fieldVaccineName.setText(this.selectedApplicant.getPetVaccine().getVaccine_name());
            
            String petVax = fieldVaccineName.getText();
            if(petVax.isEmpty()){
                fieldNoOfVax.setText(String.valueOf(0));
            }else{
                String[] values = petVax.split(",");
                fieldNoOfVax.setText(String.valueOf(values.length));      
            }
            
            if(this.selectedApplicant.getPetVaccine().getIsCourseCompleted() == "Yes"){
                jCheckBox1.setSelected(true);
            }else{
                jCheckBox1.setSelected(false);
            }
 
            try {
                SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
                Date date = dateFormat.parse(this.selectedApplicant.getApplication_date());
                jDateChooser1.setDate(date);
            } catch (ParseException e) {
                e.printStackTrace();
            }      
            
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Row!");
        }

    }//GEN-LAST:event_viewBtnActionPerformed

    private void fieldPetAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldPetAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldPetAgeActionPerformed

    private void UpdatePetAgeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatePetAgeBtnActionPerformed
        // TODO add your handling code here:

        if(!fieldAppID.getText().isEmpty()){
            this.selectedApplicant.getPet().setPet_age(Integer.valueOf(fieldPetAge.getText()));
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
            String app_date = sdf.format(jDateChooser1.getDate());
            this.selectedApplicant.setApplication_date(app_date);
            
            this.selectedApplicant.getPetVaccine().setVaccine_name(fieldVaccineName.getText());
            
            if (jCheckBox1.isSelected()) {
                this.selectedApplicant.getPetVaccine().setIsCourseCompleted("Yes");
            } else {
                this.selectedApplicant.getPetVaccine().setIsCourseCompleted("No");
            } 
            
            String petVaccine = fieldVaccineName.getText();
            if(petVaccine.isEmpty()){
                fieldNoOfVax.setText(String.valueOf(0));
            }else{
                String[] values = petVaccine.split(",");
                fieldNoOfVax.setText(String.valueOf(values.length));      
            }    
        }
        else{
            JOptionPane.showMessageDialog(null, "No selection made!");
        }

        displayPetDetails();

    }//GEN-LAST:event_UpdatePetAgeBtnActionPerformed

    private void fieldAppIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAppIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAppIDActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        // TODO add your handling code here:
        ApplicantCatalog appCatalog = this.business.getApplicantCatalog();
        int selectedRow = appTable.getSelectedRow();
        
        if(selectedRow >= 0){
            
            this.selectedApplicant = (Applicant) appTable.getValueAt(selectedRow, 0);
            
            appCatalog.removeApplicant(this.selectedApplicant.getApp_id());
            
        }
        
        displayApplicants();
        displayPetDetails();
        
    }//GEN-LAST:event_delBtnActionPerformed

    private void fieldVaccineNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldVaccineNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldVaccineNameActionPerformed

    private void fieldNoOfVaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldNoOfVaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldNoOfVaxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton UpdatePetAgeBtn;
    private javax.swing.JTable appTable;
    private javax.swing.JButton delBtn;
    private javax.swing.JTextField fieldAppID;
    private javax.swing.JTextField fieldNoOfVax;
    private javax.swing.JTextField fieldPetAge;
    private javax.swing.JTextField fieldVaccineName;
    private javax.swing.JCheckBox jCheckBox1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable petTable;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables
}
