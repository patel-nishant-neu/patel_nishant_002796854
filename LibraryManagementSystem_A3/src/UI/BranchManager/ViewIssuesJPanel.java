/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.BranchManager;

import AppSys.Business;
import Branch.Branch;
import Branch.UserAccount;
import Customer.Customer;
import Library.BookCollection;
import Library.MagazineCollection;
import Services.RentRequest;
import Services.RentRequestDirectory;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author narot
 */
public class ViewIssuesJPanel extends javax.swing.JPanel {

    Business business;
    UserAccount useraccount;
    Branch branch;
    DefaultTableModel tableModel1;
    /**
     * Creates new form ViewMaterialsJPanel
     */
    public ViewIssuesJPanel() {
        initComponents();
    }

    public ViewIssuesJPanel(Business business, UserAccount useraccount) {
        initComponents();
        this.setVisible(true);
        
        this.business = business;
        this.useraccount = useraccount;
        this.tableModel1 = (DefaultTableModel) jTable2.getModel();
        
        populateRentalHistory();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Library Rental History");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, 290, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rental ID", "Material Type", "Material ID", "Material Name", "Customer ID", "Customer Name", "Duration of days ", "Status", "Rent Payment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable2);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 980, 410));
    }// </editor-fold>//GEN-END:initComponents
    public void populateRentalHistory(){
        tableModel1.setRowCount(0);
        
        Customer c = this.business.getCustomerDirectoy().findById(useraccount.getAccountId());
        BookCollection books = this.business.getBranch().getLibrary().getBooks();
        MagazineCollection md = this.business.getBranch().getLibrary().getMd();
                   
        RentRequestDirectory requests = this.business.getBranch().getLibrary().getRentalRequestDirectory();
        
        if(requests.getOrderlist().size() > 0){
            
            tableModel1.setRowCount(0);
            for(RentRequest r : requests.getOrderlist()){
//                System.out.println("\nTHISS " + r.getBook().getName()); 
                if(r.getMaterial().equals("Book")){
                    Object row[] = new Object[9];
                    row[0] = r;
                    row[1] = r.getMaterial();
                    row[2] = r.getBook().getId();
                    row[3] = r.getBook().getBookName();
                    row[4] = r.getCustomer().getPersonID();
                    row[5] = r.getCustomer().getName();
                    row[6] = r.getDuration_of_days();
                    row[7] = r.getBook().getStatus();
                    row[8] = r.getRentalRequestPrice();
                    
                    tableModel1.addRow(row);    
                    
                }else if(r.getMaterial().equals("Magazine")){
                    Object row[] = new Object[9];
                    row[0] = r;
                    row[1] = r.getMaterial();
                    row[2] = r.getMagazine().getId();
                    row[3] = r.getMagazine().getComapany_name();
                    row[4] = r.getCustomer().getPersonID();
                    row[5] = r.getCustomer().getName();
                    row[6] = r.getDuration_of_days();
                    row[7] = r.getMagazine().getStatus();
                    row[8] = r.getRentalRequestPrice();
                    
                    tableModel1.addRow(row);
                }             
            }
        }
        else{
            System.out.println("Empty List");
        }
        
        this.business.getBranch().getLibrary().TotalRevenue();
        System.out.println(this.business.getBranch().getLibrary().getTotalRevenue());
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
