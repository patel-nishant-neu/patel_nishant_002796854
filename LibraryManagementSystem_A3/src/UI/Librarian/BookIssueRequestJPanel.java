/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Librarian;

import AppSys.Business;
import Branch.Branch;
import Branch.UserAccount;
import Library.Book;
import Library.Library;
import Services.RentRequest;
import Services.RentRequestDirectory;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author narot
 */
public class BookIssueRequestJPanel extends javax.swing.JPanel {

    Business business;
    UserAccount useraccount;
    String branch;
    DefaultTableModel tableModel1;
    DefaultTableModel tableModel2;
    
    Book selectedBook;
    /**
     * Creates new form BookIssueRequestJPanel
     */
    public BookIssueRequestJPanel() {
        initComponents();
    }

    public BookIssueRequestJPanel(Business business, UserAccount useraccount, String Branch) {
        initComponents();
        this.setVisible(true);
        this.business = business;
        this.useraccount = useraccount;
        this.branch = branch;
        this.tableModel1 = (DefaultTableModel) jBookIssueTable.getModel();
        this.tableModel2 = (DefaultTableModel) jMagazineIssueTable.getModel();
        
        for(Library lib : this.business.getBranch().getBranches()){
            if(lib.getBranchName().equals(branch)){
                this.business.getBranch().setLibrary(lib);
                break;
            }
        }
        
        displayBookIssues();
        displayMagazineIssues();
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMagazineIssueTable = new javax.swing.JTable();
        jAcceptIssueBtn = new javax.swing.JButton();
        jRejectIssueBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jBookIssueTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setText("Magazine Issues: ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, 191, -1));

        jMagazineIssueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "RentalID", "Name", "Customer ID", "Book ID", "Issue Duraction", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jMagazineIssueTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 627, 199));

        jAcceptIssueBtn.setBackground(new java.awt.Color(204, 255, 204));
        jAcceptIssueBtn.setText("Accept Issue");
        jAcceptIssueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAcceptIssueBtnActionPerformed(evt);
            }
        });
        add(jAcceptIssueBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 580, -1, -1));

        jRejectIssueBtn.setBackground(new java.awt.Color(255, 204, 204));
        jRejectIssueBtn.setText("Reject Issue");
        jRejectIssueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRejectIssueBtnActionPerformed(evt);
            }
        });
        add(jRejectIssueBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 580, -1, -1));

        jBookIssueTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "RentalID", "Name", "Customer ID", "Book ID", "Issue Duraction", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jBookIssueTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 627, 199));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Issue Request");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 27, 191, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Book Issues: ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 191, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jAcceptIssueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAcceptIssueBtnActionPerformed
        // TODO add your handling code here:
        int selectedrow = jBookIssueTable.getSelectedRow();
        int selectedrow_mag = jMagazineIssueTable.getSelectedRow();


//        System.out.println("\nRENTAL REQUEST ACCEPTED!! ");
        if(selectedrow >= 0){
            RentRequest r = (RentRequest) jBookIssueTable.getValueAt(selectedrow, 0);
            r.setStatus("ACCEPTED");
            r.getBook().setStatus("RENTED");
            r.getCustomer().addOrder(r);
            r.setRentalRequestPrice((r.getCustomer().calculateRentPrice(r.getDuration_of_days(), r.getBook().getPrice())));           
            r.getCustomer().setRentalsTotal(r.getCustomer().calculateTotalPrice(r.getRentalRequestPrice()));
        }

        if(selectedrow_mag >= 0){
            RentRequest r_mag = (RentRequest) jMagazineIssueTable.getValueAt(selectedrow_mag, 0);
            r_mag.setStatus("ACCEPTED");
            r_mag.getMagazine().setStatus("RENTED");
            r_mag.getCustomer().addOrder(r_mag);
            r_mag.setRentalRequestPrice((r_mag.getCustomer().calculateRentPrice(r_mag.getDuration_of_days(), r_mag.getMagazine().getPrice())));           
            r_mag.getCustomer().setRentalsTotal(r_mag.getCustomer().calculateTotalPrice(r_mag.getRentalRequestPrice()));
        }
        
        displayBookIssues();
        displayMagazineIssues();
    }//GEN-LAST:event_jAcceptIssueBtnActionPerformed

    private void jRejectIssueBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRejectIssueBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedrow = jBookIssueTable.getSelectedRow();
        int selectedrow_mag = jMagazineIssueTable.getSelectedRow();


//        System.out.println("\nRENTAL REQUEST ACCEPTED!! ");
        if(selectedrow >= 0){
            RentRequest r = (RentRequest) jBookIssueTable.getValueAt(selectedrow, 0);
            r.getBook().setStatus("AVAILABLE");
            r.setStatus("REJECTED");
            r.getCustomer().addOrder(r);
        }

        if(selectedrow_mag >= 0){
            RentRequest r_mag = (RentRequest) jMagazineIssueTable.getValueAt(selectedrow_mag, 0);
            r_mag.getMagazine().setStatus("AVAILABLE");
            r_mag.setStatus("REJECTED");
            r_mag.getCustomer().addOrder(r_mag);
        }
        
        displayBookIssues();
        displayMagazineIssues();
        
    }//GEN-LAST:event_jRejectIssueBtnActionPerformed

    public void displayBookIssues(){
                   
        RentRequestDirectory requests = this.business.getBranch().getLibrary().getRentRequestDirectory();
        
        
        if(!requests.getOrderlist().isEmpty()){
            
            tableModel1.setRowCount(0);
            for(RentRequest r : requests.getOrderlist()){
                if(r.getMaterial().toString() == "Book"){
                    if(r.getBranch().equals(this.business.getBranch().getLibrary().getBranchName())){
                        Object row[] = new Object[6];
                        row[0] = r;
                        row[1] = r.getOrderId();
                        row[2] = r.getCustomer().getPersonID();
                        row[3] = r.getBook().getId();
                        row[4] = r.getDuration_of_days();
                        row[5] = r.getBook().getStatus();

                        tableModel1.addRow(row);                      
                    }
                    else{
                        System.out.println(r.getBranch());
                    }
                }                   
                }            
        }
        else{
            System.out.println("No book requests are found");
        }  
    }
    
    public void displayMagazineIssues(){
                   
        RentRequestDirectory requests = this.business.getBranch().getLibrary().getRentRequestDirectory();
        
        if(requests.getOrderlist().size() > 0){
            
            tableModel2.setRowCount(0);
            for(RentRequest r : requests.getOrderlist()){
                if(r.getMaterial().toString() == "Magazine"){
                     if(r.getBranch().equals(this.business.getBranch().getLibrary().getBranchName())){                       
                        Object row[] = new Object[6];
                        row[0] = r;
                        row[1] = r.getOrderId();
                        row[2] = r.getCustomer().getPersonID();
                        row[3] = r.getMagazine().getId();
                        row[4] = r.getDuration_of_days();
                        row[5] = r.getMagazine().getStatus();
                        tableModel2.addRow(row);   
                    }
                        else{
                        System.out.println("No Magazine requests found");
                    }
                }
                System.out.println(r.getMaterial() + "This is what we want BBCCCC");
            }
                

        }
        else{
            System.out.println("No Magazine requests found");
        }   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAcceptIssueBtn;
    private javax.swing.JTable jBookIssueTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTable jMagazineIssueTable;
    private javax.swing.JButton jRejectIssueBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
